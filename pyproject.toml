[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 61.0", "wheel"]

[project]
name = "trimesh"
requires-python = ">=3.8"
version = "4.4.3"
authors = [{name = "Michael Dawson-Haggerty", email = "mikedh@kerfed.com"}]
license = {file = "LICENSE.md"}
description = "Import, export, process, analyze and view triangular meshes."
keywords = ["graphics", "mesh", "geometry", "3D"]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Graphics :: 3D Modeling"
]
urls = {Homepage = "https://github.com/mikedh/trimesh"}

dependencies = ["numpy>=1.20"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[tool.setuptools]
packages = [
    "trimesh",
    "trimesh.ray",
    "trimesh.path",
    "trimesh.path.exchange",
    "trimesh.scene",
    "trimesh.voxel",
    "trimesh.visual",
    "trimesh.viewer",
    "trimesh.exchange",
    "trimesh.resources",
    "trimesh.interfaces",
]
include-package-data = false

[tool.setuptools.package-data]
trimesh = [
    "resources/templates/*",
    "resources/*.json",
    "resources/schema/*",
    "resources/schema/primitive/*.json",
    "resources/*.zip",
]

[project.optional-dependencies]

# this is the base extra most users will want
easy = [
    "colorlog",
    "manifold3d>=2.3.0", # do boolean operations    
    "chardet",
    "lxml",
    "jsonschema",
    "networkx",
    "svg.path",
    "pycollada",
    "setuptools",
    "shapely",
    "xxhash",
    "rtree",
    "httpx",
    "scipy",
    "embreex; platform_machine=='x86_64'",
    "pillow",
    "vhacdx",
    "xatlas",
]

recommend = [
    "glooey",
    "sympy",
    "meshio",
    "pyglet<2",
    "psutil",
    "scikit-image",
    "python-fcl", # do collision checks
    "openctm", # load `CTM` compressed models
    "cascadio", # load `STEP` files
    "mapbox-earcut", # BLOCKED FOR NUMPY2
    
]

# this is the list of everything that is ever added anywhere
# mostly useful for getting our test coverage up
test = [
    "pytest-cov",
    "coveralls",
    "pyright",
    "ezdxf",
    "pytest",
    #     "pymeshlab; python_version<='3.11'",
    "pyinstrument",
    "matplotlib",
    "ruff",
    "pytest-beartype; python_version>='3.10'"
]

# interfaces.gmsh will be dropped Jan 2025
deprecated = ["gmsh==4.12.2"]

# requires pip >= 21.2
# https://hynek.me/articles/python-recursive-optional-dependencies/
all = ["trimesh[easy,recommend,test,deprecated]"]

[tool.ruff]
target-version = "py38"
line-length = 90


# See https://github.com/charliermarsh/ruff#rules for error code definitions.

[tool.ruff.lint]
select = [
    # "ANN", # annotations
    "B", # bugbear
    "C", # comprehensions
    "E", # style errors
    "F", # flakes
    "I", # import sorting
    "RUF", # ruff specific rules
    "UP", # upgrade
    "W", # style warnings
    "YTT", # sys.version
    "ISC002",
    "NPY201",
    "TID251"
]

ignore = [
  "C901", # Comprehension is too complex (11 > 10)
  "N802", # Function name should be lowercase
  "N806", # Variable in function should be lowercase
  "E501", # Line too long ({width} > {limit} characters)
  "B904", # raise ... from err
  "B905", # zip() without an explicit strict= parameter
  "RUF005", # recommends non-type-aware expansion
]

# don't allow implicit string concatenation
flake8-implicit-str-concat = {"allow-multiline" = false}

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"IPython.embed".msg = "you forgot to remove a debug embed ;)"
"numpy.empty".msg = "uninitialized arrays are haunted try numpy.zeros"


[tool.codespell]
skip = "*.js*,./docs/built/*,./docs/generate/*,./models*,*.toml"
ignore-words-list = "nd,coo,whats,bu,childs,mis,filetests"

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true
disallow_untyped_defs = false
disallow_untyped_calls = false
disable_error_code = ["method-assign"]